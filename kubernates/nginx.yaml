apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: ClusterIP               # ExternalName ClusterIP NodePort LoadBalancer
  # sessionAffinity: ClientIP   # ClientIP None
  clusterIP: None
  selector:
    app: nginx-pod              # POD选择器(后台服务POD)
  ports:
    - name: http
      port: 80                  # 服务监听的端口号
      targetPort: 80            # 容器的端口号
      # nodePort: 8080             # 节点端口
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    # matchExpressions:
    #   - key: name
    #     operator: 
    #      - IN                   # In NotIn Exists DoesNotExist
    #     values: nginx-pod
    matchLabels:
      app: nginx-pod           # POD选择器(监控的POD)
  replicas: 1                   # Deployment需要保持POD的数量
  minReadySeconds: 0
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate         # Recreate RollingUpdate
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 5%
  template:
    metadata:
      labels:
        app: nginx-pod
    spec:
      containers:
        - name: nginx-container
          image: nginx
          imagePullPolicy: Always # Always Never
          ports:
            - protocol: TCP       # UDP TCP SCTP
              containerPort: 80
              # hostPort: 80
          env:
            - name: service-version
              value: v1
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx   # 挂载目录
      restartPolicy: Always     # Always OnFailure Never
      # activeDeadlineSeconds: 12
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-config-map
            items:              # 需要挂载的内容KEY -- 挂载文件名配置
              - key: nginx.conf
                path: nginx.conf
                mode: 0777       # 0 - 0777
            defaultMode: 0777    # 0 - 0777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-map
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      server {
        listen  80;
        location / {
          alias /;
          autoindex on;
        }
      }
    }