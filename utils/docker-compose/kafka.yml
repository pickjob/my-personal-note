version: "3.5"
services:
    kafka_zk:
        image: zookeeper
        container_name: kafka_zk
        hostname: kafka_zk
        restart: always
        ports:
            - 2181:2181
        networks:
            - kafka_net
        env_file:
            - ./common.env
            - ./zookeeper/zookeeper.env
    kafka_zoonavigator:
        image: elkozmon/zoonavigator
        container_name: kafka_zoonavigator
        hostname: kafka_zoonavigator
        restart: always
        ports:
            - 9000:9000
        networks:
            - kafka_net
        env_file:
            - ./common.env
        environment:
            - HTTP_PORT=9000
            - CONNECTION_ZK_CONN=kafka_zk:2181
        depends_on:
            - kafka_zk
    kafka_kafka:
        image: bitnami/kafka
        container_name: kafka_kafka
        hostname: kafka_kafka
        restart: always
        ports:
            - 9092:9092
        networks:
            - kafka_net
        env_file:
            - ./common.env
        environment:
            - ALLOW_PLAINTEXT_LISTENER=yes
            # - KAFKA_CFG_BROKER_ID=1
            - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka_zk:2181
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
            - KAFKA_CFG_LOG_ROLL_MS=60000         # 日志滚动的周期时间 (log.roll.{hours,ms})
            - KAFKA_CFG_LOG_RETENTION_MS=600000   # 日志保留时间 (log.retention.{hours,minutes,ms})
            # - KAFKA_CFG_LOG_SEGMENT_DELETE_DELAY_MS= # 删除日志文件前的保留一段时间 (log.segment.delete.delay.ms)
            - KAFKA_CFG_CLEANUP_POLICY=compact    # 过期segment处理算法，默认delete (cleanup.policy={compact,delete})
        volumes:
            - ~/data/kafka:/bitnami/kafka
        depends_on:
            - kafka_zk
    kafka_kafdrop:
        image: obsidiandynamics/kafdrop
        container_name: kafka_kafdrop
        hostname: kafka_kafdrop
        restart: always
        ports:
            - 9010:9000
        networks:
            - kafka_net
        env_file:
            - ./common.env
        environment:
            - JVM_OPTS=-Xms32M -Xmx64M
            - KAFKA_BROKERCONNECT=kafka_kafka:9092
        depends_on:
            - kafka_kafka
    kafka_manager:
        image: kafkamanager/kafka-manager
        container_name: kafka_manager
        hostname: kafka_manager
        restart: always
        ports:
            - 9020:9000
        networks:
            - kafka_net
        env_file:
            - ./common.env
        environment:
            - ZK_HOSTS=kafka_zk:2181
        depends_on:
            - kafka_kafka
networks:
    kafka_net:
        driver: bridge