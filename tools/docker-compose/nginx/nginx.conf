# user       www www;  ## Default: nobody
# worker_processes  5;  ## Default: 1
# error_log  logs/error.log;
# pid        logs/nginx.pid;
# worker_rlimit_nofile 8192;
events {
    worker_connections  4096;  ## Default: 1024
}
http {
    include    /etc/nginx/mime.types;
    # include    /etc/nginx/proxy.conf;
    # index      index.html index.htm index.php;
    # 默认返回MIME
    default_type application/octet-stream;
    # 日志配置
    log_format   main '$time_iso8601 $remote_addr:$remote_port $request_time $status "$request" "$http_Authorization" "$http_user_agent"';
    access_log   logs/access.log  main;
    sendfile     on;
    tcp_nopush   on;
    tcp_nodelay  on;
    server_names_hash_bucket_size 128; # this seems to be required for some vhosts

    gzip on;
    gzip_min_length  1100;
    gzip_buffers     4 8k;
    gzip_types       text/plain;

    # 负载均衡配置(反响代理配置)
    # upstream big_server_com {
    #   server 127.0.0.3:8000 weight=5;
    #   server 127.0.0.3:8001 weight=5;
    #   server 192.168.0.1:8000;
    #   server 192.168.0.1:8001;
    # }
    # server {
    #   listen          80;
    #   server_name     big.server.com;
    #   access_log      logs/big.server.access.log main;
    #   location / {
    #       proxy_pass      http://big_server_com;
    #       proxy_set_header       Host $host;
    #       proxy_set_header        X-Real-IP       $remote_addr;
    #       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    #       proxy_buffering        on;
    #       proxy_connect_timeout   90;
    #       proxy_send_timeout      90;
    #       proxy_read_timeout      90;
    #       proxy_buffers           32 4k;
    #   }
    # }
    
    # 文件服务器配置
    server {
        listen        80;
        location / {
            root       /doc;
            autoindex  on;
        }
    }    
    # location [operator] path 优先级
    #       = path: 精确匹配
    #         path : 完整路径
    #      ^~ path: 开头表示uri以某个常规字符串开头，这个不是正则表达式
    #       ~ pathReg: 开头表示区分大小写的正则匹配
    #      ~* pathReg: 开头表示不区分大小写的正则匹配
    #        pathStart: **起始路径, 优先级低于正则结果**

    # rewrite:
    #       301: rewrite ^(.*)$ http://www.*.com$1 permanent;
    #       302: rewrite ^(.*)$ http://www.*.com$1 redirect;
    #       server rewrite: rewrite ^(.*)$ http://www.*.com$1 last / break;

    # 请求body大小限制:
    #       client_max_body_size 1000m;
    #       client_body_buffer_size 128k;

    # Basic Authentication配置
    #       auth_basic   "realm";
    #       auth_basic_user_file htpasswd;

    # log rotation
    # mv access.log access.log.0
    # kill -USR1 `cat master.nginx.pid`
    # sleep 1
    # gzip access.log.0    # do something with access.log.0
}