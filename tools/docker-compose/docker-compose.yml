version: '3'
services:
    nginx:
        image: nginx:stable
        container_name: nginx
        ports:
            - 80:80
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ~/doc/:/doc/:ro
    redis:
        image: redis:5.0-alpine
        container_name: redis
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - 6379:6379
        volumes:
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
            - ~/data/redis/:/data/logs/
    p3x-redis-ui:
        container_name: p3x-redis-ui
        image: patrikx3/p3x-redis-ui:latest
        ports:
            - 7843:7843
        volumes:
            - ~/.p3x-redis-ui-settings:/settings:rw
    mysql:
        image: mysql:8
        container_name: mysql
        ports:
            - 3306:3306
        volumes:
            - ./mysql:/docker-entrypoint-initdb.d
            - ./mysql/mysql.cnf:/etc/mysql/conf.d/my.cnf
            - ~/data/mysql/logs:/logs
            - ~/data/mysql/data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: chinese
    mongo:
        image: mongo:4.1
        container_name: mongo
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_DATABASE: mongo
            MONGO_INITDB_ROOT_USERNAME: china
            MONGO_INITDB_ROOT_PASSWORD: chinese
    mongo-express:
        image: mongo-express:latest
        container_name: mongo-express
        depends_on:
            - mongo
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: china
            ME_CONFIG_MONGODB_ADMINPASSWORD: chinese
    # zookeeper:
    #     container_name: zookeeper
    #     image: wurstmeister/zookeeper
    #     ports:
    #         - 2181:2181
    # kafka:
    #     container_name: kafka
    #     image: wurstmeister/kafka
    #     depends_on: [ zookeeper ]
    #     ports:
    #         - 9092:9092
    #     environment:
    #         KAFKA_ADVERTISED_HOST_NAME: kafka
    #         KAFKA_CREATE_TOPICS: test:1:1
    #         KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    # zk1:
    #     image: zookeeper
    #     container_name: zk1
    #     ports:
    #         - 2181:2181
    #     environment:
    #         ZOO_MY_ID: 1
    #         ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=conf-zk2:2888:3888 server.3=conf-zk3:2888:3888
    # zk2:
    #     image: zookeeper
    #     container_name: zk2
    #     ports:
    #         - 2182:2181
    #     environment:
    #         ZOO_MY_ID: 2
    #         ZOO_SERVERS: server.1=conf-zk1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=conf-zk3:2888:3888
    # zk3:
    #     image: zookeeper
    #     container_name: zk3
    #     ports:
    #         - 2183:2181
    #     environment:
    #         ZOO_MY_ID: 3
    #         ZOO_SERVERS: server.1=conf-zk1:2888:3888 server.2=conf-zk2:2888:3888 server.3=0.0.0.0:2888:3888
    # prometheus:
    #     image: prom/prometheus:v2.9.2
    #     container_name: prometheus
    #     ports:
    #         - 9090:9090
    #     volumes:
    #         - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    #         - ./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml