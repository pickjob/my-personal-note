version: '3'
services:
    nginx:
        image: nginx:stable
        container_name: nginx
        ports:
            - 80:80
        environment:
            LANG: C.UTF-8
            TZ: Asia/Shanghai
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ~/data/doc/:/doc/
            - ~/data/nginx/logs:/etc/nginx/logs
    redis:
        image: redis:5.0-alpine
        container_name: redis
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - 6379:6379
        volumes:
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
            - ~/data/redis/:/data/logs/
    mysql:
        image: mysql:8
        container_name: mysql
        ports:
            - 3306:3306
        environment:
            LANG: C.UTF-8
            TZ: Asia/Shanghai
            MYSQL_ROOT_PASSWORD: chinese
        volumes:
            - ./mysql:/docker-entrypoint-initdb.d
            - ./mysql/mysql.cnf:/etc/mysql/conf.d/my.cnf
            - ~/data/mysql/logs:/logs
            - ~/data/mysql/data:/var/lib/mysqls
    nacos:
        image: nacos/nacos-server:1.3.1
        container_name: nacos-standalone-mysql
        environment:
            PREFER_HOST_MODE: hostname
            MODE: standalone
            SPRING_DATASOURCE_PLATFORM: mysql
            MYSQL_SERVICE_HOST: mysql
            MYSQL_SERVICE_DB_NAME: nacos
            MYSQL_SERVICE_PORT: 3306
            MYSQL_SERVICE_USER: root
            MYSQL_SERVICE_PASSWORD: chinese
        volumes:
            - ./nacos/custom.properties:/home/nacos/init.d/custom.properties
            - ~/data/nacos/logs:/home/nacos/logs
        ports:
            - 8848:8848
            - 9555:9555
        depends_on:
            - mysql
    mongo:
        image: mongo:4.1
        container_name: mongo
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_DATABASE: mongo
            MONGO_INITDB_ROOT_USERNAME: china
            MONGO_INITDB_ROOT_PASSWORD: chinese
        volumes:
            - ./mongo:/docker-entrypoint-initdb.d
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - http.cors.enabled=true
            - http.cors.allow-origin=http://elasticsearch:1358
            - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
            - http.cors.allow-credentials=true
            - ELASTIC_PASSWORD_FILE=/run/secrets/bootstrapPassword.txt
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ~/data/elasticsearch:/usr/share/elasticsearch/data
            - ./elasticsearch/bootstrapPassword.txt:/run/secrets/bootstrapPassword.txt
        ports:
            - 9200:9200
    es1:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: es1
        environment:
            - node.name=es1
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es2,es3
            - cluster.initial_master_nodes=es1,es2,es3
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ~/data/es1:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
    es2:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: es2
        environment:
            - node.name=es2
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es1,es3
            - cluster.initial_master_nodes=es1,es2,es3
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ~/data/es2:/usr/share/elasticsearch/data
    es3:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: es3
        environment:
            - node.name=es3
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es1,es2
            - cluster.initial_master_nodes=es1,es2,es3
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ~/data/es1:/usr/share/elasticsearch/data
    zookeeper:
        image: zookeeper
        container_name: zk1
        ports:
            - 2181:2181
    zk1:
        image: zookeeper
        container_name: zk1
        ports:
            - 2181:2181
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
    zk2:
        image: zookeeper
        container_name: zk2
        ports:
            - 2182:2181
        environment:
            ZOO_MY_ID: 2
            ZOO_SERVERS: server.1=zk1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zk3:2888:3888
    zk3:
        image: zookeeper
        container_name: zk3
        ports:
            - 2183:2181
        environment:
            ZOO_MY_ID: 3
            ZOO_SERVERS: server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=0.0.0.0:2888:3888
    prometheus:
        image: prom/prometheus:v2.9.2
        container_name: prometheus
        ports:
            - 9090:9090
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        depends_on:
            - nacos
    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - 3000:3000
    p3x-redis-ui:
        image: patrikx3/p3x-redis-ui
        container_name: p3x-redis-ui
        ports:
            - 7843:7843
        volumes:
            - ~/.p3x-redis-ui-settings:/settings
    mongo-express:
        image: mongo-express:latest
        container_name: mongo-express
        depends_on:
            - mongo
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: china
            ME_CONFIG_MONGODB_ADMINPASSWORD: chinese
    dejavu:
        image: appbaseio/dejavu
        container_name: dejavu
        depends_on:
            - elasticsearch
        ports:
            - 1358:1358